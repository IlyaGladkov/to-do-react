{"ast":null,"code":"var _jsxFileName = \"/Users/iliyagladkov/Documents/GitHub/to-do-react/src/components/ToDoList.jsx\";\nimport React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport ToDoItem from './ToDoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList(_ref) {\n  let {\n    toDoItems,\n    getTask,\n    setVisibleModal,\n    remove\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"to-do-list\",\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: toDoItems.map((toDO, index) => {\n        /*#__PURE__*/_jsxDEV(CSSTransition, {\n          children: /*#__PURE__*/_jsxDEV(ToDoItem, {\n            setVisibleModal: setVisibleModal,\n            getTask: getTask,\n            remove: remove,\n            number: index + 1,\n            toDo: toDO\n          }, toDO.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","TransitionGroup","CSSTransition","ToDoItem","ToDoList","toDoItems","getTask","setVisibleModal","remove","map","toDO","index","id"],"sources":["/Users/iliyagladkov/Documents/GitHub/to-do-react/src/components/ToDoList.jsx"],"sourcesContent":["import React from 'react'\nimport { TransitionGroup,CSSTransition } from 'react-transition-group'\nimport ToDoItem from './ToDoItem'\n\nexport default function ToDoList({toDoItems, getTask, setVisibleModal, remove}) {\n  return (\n    <div className='to-do-list'>\n      <TransitionGroup>\n        {toDoItems.map( (toDO, index) => {\n            <CSSTransition>\n              <ToDoItem setVisibleModal={setVisibleModal} getTask ={getTask} remove={remove} number={index + 1} toDo={toDO} key={toDO.id}/>\n            </CSSTransition>\n        })}\n      </TransitionGroup>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAACC,aAAa,QAAQ,wBAAwB;AACtE,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,eAAe,SAASC,QAAQ,OAAgD;EAAA,IAA/C;IAACC,SAAS;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAM,CAAC;EAC5E,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB,QAAC,eAAe;MAAA,UACbH,SAAS,CAACI,GAAG,CAAE,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC7B,qBAAC,aAAa;UAAA,uBACZ,QAAC,QAAQ;YAAC,eAAe,EAAEJ,eAAgB;YAAC,OAAO,EAAGD,OAAQ;YAAC,MAAM,EAAEE,MAAO;YAAC,MAAM,EAAEG,KAAK,GAAG,CAAE;YAAC,IAAI,EAAED;UAAK,GAAMA,IAAI,CAACE,EAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC/G;MACpB,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACc;IAAA;IAAA;IAAA;EAAA,QACd;AAEV;AAAC,KAZuBR,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}